/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package laboratory_result;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lenovo
 */
public class JPatient extends javax.swing.JFrame {

    DefaultTableModel dtm = new DefaultTableModel();

    /**
     * Creates new form Patient
     */
    public JPatient() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ustPanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        AnalysisCodeText = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        AnalysisTypeComboBox = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ustPanel.setBackground(new java.awt.Color(204, 255, 255));
        ustPanel.setForeground(new java.awt.Color(0, 102, 102));
        ustPanel.setToolTipText("");

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/laboratuvar_sonuc_takip/icons/logo.png"))); // NOI18N

        jButton3.setBackground(new java.awt.Color(153, 255, 255));
        jButton3.setForeground(new java.awt.Color(153, 255, 255));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/laboratuvar_sonuc_takip/icons/exit.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        AnalysisCodeText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnalysisCodeTextActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 102));
        jLabel2.setText("ANALYSİS CODE");

        jButton1.setText("Show Result");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/laboratuvar_sonuc_takip/icons/Hasta1.png"))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 102, 102));
        jLabel4.setText("PATIENT ENTRY");

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        AnalysisTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Analysis Type...", "Blood Analysis", "Pathology Analysis", "Urine Analysis" }));
        AnalysisTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnalysisTypeComboBoxActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 102, 102));
        jLabel6.setText("ANALYSİS TYPE");

        javax.swing.GroupLayout ustPanelLayout = new javax.swing.GroupLayout(ustPanel);
        ustPanel.setLayout(ustPanelLayout);
        ustPanelLayout.setHorizontalGroup(
            ustPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ustPanelLayout.createSequentialGroup()
                .addGap(383, 383, 383)
                .addComponent(jButton1)
                .addGap(32, 32, 32)
                .addComponent(jButton2)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ustPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel5)
                .addGroup(ustPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ustPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ustPanelLayout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jLabel4)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ustPanelLayout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(ustPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6))
                .addGap(32, 32, 32)
                .addGroup(ustPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AnalysisTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AnalysisCodeText, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(157, 157, 157))
        );
        ustPanelLayout.setVerticalGroup(
            ustPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ustPanelLayout.createSequentialGroup()
                .addGroup(ustPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ustPanelLayout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ustPanelLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addGap(57, 57, 57)
                        .addGroup(ustPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(AnalysisCodeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(ustPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AnalysisTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)))
                    .addGroup(ustPanelLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                        .addComponent(jLabel3)))
                .addGap(34, 34, 34)
                .addGroup(ustPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ustPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ustPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void AnalysisCodeTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnalysisCodeTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AnalysisCodeTextActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
 // HATAA!!       if (AnalysisCodeText.getText().isEmpty()) {
   //                  JOptionPane.showMessageDialog(this, "Please enter your Analysis Id!!");
//}

        int analysisId = Integer.parseInt(AnalysisCodeText.getText());
        JResultFrame jrf = new JResultFrame();
        
        if (AnalysisTypeComboBox.getSelectedItem().equals("Blood Analysis")) {
            
            jrf.dtm.setColumnIdentifiers(new Object[]{"AnalysisID", "B12", "Cholestrol", "Glucose", "Triglyceride"});
            jrf.setVisible(true);
            String b12 = "";
            String cholestrol = "";
            String glucose = "";
            String triglyceride = "";
            int aId = 0;
            int patientid = 0;
            try {
                Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/LaboratoryDB", "lab", "lab");
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery("SELECT * FROM BLOODANALYSIS WHERE ANALYSISID=" + analysisId);

                while (rs.next()) {
                    patientid = rs.getInt("PATIENTID");
                    aId = rs.getInt("ANALYSISID");
                    b12 = rs.getString("B12VALUE");
                    cholestrol = rs.getString("CHOLESTROLVALUE");
                    glucose = rs.getString("GLUCOSEVALUE");
                    triglyceride = rs.getString("TRIGLYCERIDESVALUE");
                    System.out.println(aId + " " + b12 + " " + cholestrol);
                jrf.dtm.addRow(new Object[]{aId, b12, cholestrol, glucose, triglyceride});
                }
                
                ResultSet rs2 = st.executeQuery("SELECT * FROM PATIENT WHERE ID=" + patientid);
                 while (rs2.next()) {
                 String name=rs2.getString("NAME");
                 String surname=rs2.getString("SURNAME");
                 jrf.LabelName(name, surname);
                 }

            } catch (Exception e) {
            }

        } else if (AnalysisTypeComboBox.getSelectedItem().equals("Pathology Analysis")) {

            jrf.dtm.setColumnIdentifiers(new Object[]{"AnalysisID", "Tumor Type", "Piace Diameter"});
            jrf.setVisible(true);
            int patientid = 0;
            try {
                Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/LaboratoryDB", "lab", "lab");
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery("SELECT * FROM PATHOLOGYANALYSIS WHERE ANALYSISID=" + analysisId);

                while (rs.next()) {
                     patientid = rs.getInt("PATIENTID");
                    int aId = rs.getInt("ANALYSISID");
                    String tumortype = rs.getString("TUMORTYPE");
                    String pd = rs.getString("PIACEDIAMETER");

                    jrf.dtm.addRow(new Object[]{aId, tumortype, pd});
                }
                 ResultSet rs2 = st.executeQuery("SELECT * FROM PATIENT WHERE ID=" + patientid);
                 while (rs2.next()) {
                 String name=rs2.getString("NAME");
                 String surname=rs2.getString("SURNAME");
                 jrf.LabelName(name, surname);
                 }

            } catch (Exception e) {
            }

        } else if (AnalysisTypeComboBox.getSelectedItem().equals("Urine Analysis")) {
             int patientid = 0;
            jrf.dtm.setColumnIdentifiers(new Object[]{"AnalysisID", "Protein", "pH", "Glucose"});
            jrf.setVisible(true);
            try {
                Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/LaboratoryDB", "lab", "lab");
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery("SELECT * FROM URINEANALYSIS WHERE ANALYSISID=" + analysisId);

                while (rs.next()) {
                    patientid = rs.getInt("PATIENTID");
                    int aId = rs.getInt("ANALYSISID");
                    String protein = rs.getString("PROTEINVALUE");
                    String ph = rs.getString("PHVALUE");
                    String glucose = rs.getString("GLUCOSEVALUE");

                    jrf.dtm.addRow(new Object[]{aId, protein, ph, glucose});
                }

                 ResultSet rs2 = st.executeQuery("SELECT * FROM PATIENT WHERE ID=" + patientid);
                 while (rs2.next()) {
                 String name=rs2.getString("NAME");
                 String surname=rs2.getString("SURNAME");
                 jrf.LabelName(name, surname);
                 }
                
            } catch (Exception e) {
            }

        } else {
            JOptionPane.showMessageDialog(this, "Please select analysis...");
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        JProgramInterface pi = new JProgramInterface();
        pi.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void AnalysisTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnalysisTypeComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AnalysisTypeComboBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JPatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JPatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JPatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JPatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JPatient().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AnalysisCodeText;
    private javax.swing.JComboBox<String> AnalysisTypeComboBox;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel ustPanel;
    // End of variables declaration//GEN-END:variables
}
